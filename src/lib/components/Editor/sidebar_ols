<script lang="ts">
    import { createEventDispatcher } from 'svelte';
    import { Search } from 'lucide-svelte';
    import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "$lib/components/ui/select";
    import SidebarToC from './TableOfContents.svelte';
    import SearchComponent from './Search.svelte';
  
    export let mainContent;
    export let headings;
    export let editor;
  
    let lastEdited = $mainContent.lastEdited || new Date().toLocaleDateString();

    const dispatch = createEventDispatcher();
  
    
      let filteredHeadings = [];

    function handleHeadingsFiltered(event) {
      filteredHeadings = event.detail;
    }

  $: displayHeadings = filteredHeadings.length ? filteredHeadings : headings;


  </script>
  
  <div class="bg-[#F3F3EE] h-full p-6 flex flex-col">
    <div class="space-y-4 overflow-y-auto flex-grow">
      <!-- <div class="sticky top-0 bg-[#F3F3EE] pt-2 z-10">
        <div class="relative">
          <Search class="absolute left-2.5 top-2.5 h-4 w-4 text-gray-500 dark:text-gray-400" />
          <input
            class="flex h-10 rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 pl-8 pr-8 w-full"
            type="search"
            placeholder="Search..."
          />
        </div>
      </div> -->
      
  <SearchComponent {headings} {editor} on:headingsFiltered={handleHeadingsFiltered} />
  
      
      <h3 class="text-2xl font-semibold leading-none tracking-tight text-gray-900">
        {mainContent.title}
      </h3> <!-- Sample Info -->
      <div class="space-y-2">
        <h3 class="text-sm font-semibold text-gray-500 dark:text-gray-400">Document Info</h3>
        <p class="text-sm text-gray-600">Last edited: {lastEdited}</p>
        <div class="text-sm text-gray-500">Word count: {mainContent.wordCount}</div>
      </div>
      
  
  
      <!-- Top Keywords -->
      <!-- <div class="space-y-2">
        <h3 class="text-sm font-semibold text-gray-500 dark:text-gray-400">Top Keywords</h3>
        <div class="flex flex-wrap gap-2">
          {#each topKeywords as keyword}
            <span class="bg-blue-100 text-blue-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
              {keyword}
            </span>
          {/each}
        </div>
      </div> -->
  
      <!-- Outline -->
      <div class="space-y-2">
        <h3 class="text-sm font-semibold text-gray-500 dark:text-gray-400">Outline</h3>
        <div class="space-y-2">
          <SidebarToC {headings} {editor}/>
        </div>
      </div>
  
     
    </div>
  </div>